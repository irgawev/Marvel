{"version":3,"sources":["components/appHeader/AppHeader.jsx","components/spinner/Spinner.jsx","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.jsx","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","resources/img/vision.png","components/app/App.jsx","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","marvelService","onCharLoader","setState","error","onCharLoading","updateChar","Math","floor","random","then","catch","onError","onSetRandomChar","console","log","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","image","CharList","charList","newItemLodaing","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","props","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","err","info","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d172fedf.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\"\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\" }} src={img} alt=\"Error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","\r\n\r\nclass MarvelService {\r\n    _apiBase = \"https://gateway.marvel.com:443/v1/public/\"\r\n    _apiKey = \"d06a4cf5000014c59b13e0c7121336a1\"\r\n    _baseOffset = 210\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url)\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n\r\n        return await res.json()\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&apikey=${this._apiKey}`)\r\n        return res.data.results.map(this._transformCharacter)\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}/characters/${id}?&apikey=${this._apiKey}`)\r\n        return this._transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true\n    }\n\n    marvelService = new MarvelService()\n\n    onCharLoader = (char) => {\n        this.setState({\n            char,\n            loading: false,\n            error: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000 + 1) + 1011000)\n\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoader)\n            .catch(this.onError)\n    }\n\n    onSetRandomChar = () => {\n        console.log(\"update\")\n        this.updateChar()\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    render() {\n        const { char, loading, error } = this.state\n        const errorMessage = error ? <ErrorMessage /> : null\n        const spinner = loading ? <Spinner /> : null\n        const content = !(loading || error) ? <View char={char} /> : null\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.onSetRandomChar}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char\n    const image = !(thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") ? <img src={thumbnail} alt={name} className=\"randomchar__img\" /> : <img src={thumbnail} alt={name} className=\"randomchar__img\" style={{ objectFit: \"contain\" }} />\n\n    return (\n        <div className=\"randomchar__block\">\n            {image}\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">Homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLodaing: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading()\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLodaing: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false\n\n        if (newCharList.length < 9) {\n            ended = true\n        }\n\n        this.setState(({ offset, charList }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLodaing: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = []\n\n    setRef = ref => {\n        this.itemRefs.push(ref)\n    }\n\n    focusOnItem = id => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'))\n        this.itemRefs[id].classList.add('char__item_selected')\n        this.itemRefs[id].focus()\n    }\n\n    renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    key={item.id}\n                    ref={this.setRef}\n                    tabIndex=\"0\"\n                    onClick={() => {\n                        this.props.onCharSelected(item.id)\n                        this.focusOnItem(i)\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === 'Enter') {\n                            this.props.onCharSelected(item.id)\n                            this.focusOnItem(i)\n                        }\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const { charList, loading, error, newItemLodaing, offset, charEnded } = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLodaing}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar()\n        }\n    }\n\n    updateChar = () => {\n        const { charId } = this.props\n\n        if (!charId) {\n            return\n        }\n\n        this.onCharLoading()\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoader)\n            .catch(this.onError)\n    }\n\n    onCharLoader = (char) => {\n        this.setState({\n            char,\n            loading: false,\n            error: false,\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    render() {\n        const { char, loading, error } = this.state\n\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null\n        const spinner = loading ? <Spinner /> : null\n        const content = !(loading || error || !char) ? <View char={char} /> : null\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char\n\n    let imgStyle = { 'objectFit': 'cover' };\n\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'unset' };\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img style={imgStyle} src={thumbnail} alt={name} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"This guy is not in the comics.\"}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return\n\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(err, info) {\r\n        console.log(err, info)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/> \r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n\n                {/* Header */}\n                <AppHeader />\n\n                <main>\n\n                    {/* Random character */}\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n\n                    <div className=\"char__content\">\n\n                        {/* Characters list */}\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected} />\n                        </ErrorBoundary>\n\n                        {/* Character info */}\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n\n                    </div>\n\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}